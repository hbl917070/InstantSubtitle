<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:ColorPicker="clr-namespace:ColorPicker;assembly=ColorPicker"
                    mc:Ignorable="d">

    <!-- 資源字典項目應在此處定義。 -->

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator  Cursor="Hand"
                                      Background="#00000000">
                        <BulletDecorator.Bullet>
                            <Grid Height="20"
                                  Width="20">
                                <!--Define size of the Bullet-->

                                <!--The two borders-->
                                <Border x:Name="RadioOuter"
                                        Background="{DynamicResource sol_黑40}"
                                        BorderBrush="{DynamicResource sol_白}"
                                        BorderThickness="2"
                                        CornerRadius="10" />
                                <Border CornerRadius="6"
                                        Margin="4"
                                        x:Name="RadioMark"
                                        Background="{DynamicResource sol_淺藍}"
                                        Visibility="Hidden"
                                        BorderBrush="{DynamicResource sol_白}" />

                            </Grid>
                        </BulletDecorator.Bullet>

                        <!--Text element-->
                        <TextBlock Margin="3,1,0,0"
                                   Foreground="{DynamicResource sol_白}"
                                   FontFamily="Calibri"
                                   FontSize="18"><InlineUIContainer>
                                <ContentPresenter />
                            </InlineUIContainer></TextBlock>
                    </BulletDecorator>

                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>

                        <!--選取後-->
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="RadioMark"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="RadioOuter"
                                    Property="BorderBrush"
                                    Value="{DynamicResource sol_白}" />
                        </Trigger>

                        <!--移入-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="RadioOuter"
                                    Property="BorderBrush"
                                    Value="{DynamicResource sol_淺藍}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator   Cursor="Hand"
                                       Background="#00000000"
                                       VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Grid  Height="20"
                                   Width="20"
                                   Margin="3,0,0,0">
                                <!--Define size of the Bullet-->

                                <!--The two borders-->
                                <Border x:Name="RadioOuter"
                                        Background="{DynamicResource sol_黑40}"
                                        BorderBrush="{DynamicResource sol_白}"
                                        BorderThickness="2"
                                        CornerRadius="0" />
                                <Polygon x:Name="TickMark"
                                         Points="4,9 8,15 15,3 8,11 4,9"
                                         Stroke="{DynamicResource sol_淺藍}"
                                         StrokeThickness="3"
                                         Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>

                        <!--Text element-->
                        <TextBlock Margin="3,1,0,0"
                                   Foreground="{DynamicResource sol_白}"
                                   FontFamily="Calibri"
                                   FontSize="18"><InlineUIContainer>
                                <ContentPresenter />
                            </InlineUIContainer></TextBlock>
                    </BulletDecorator>

                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>

                        <!--選取後-->
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="TickMark"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="RadioOuter"
                                    Property="BorderBrush"
                                    Value="{DynamicResource sol_白}" />
                        </Trigger>

                        <!--移入-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="RadioOuter"
                                    Property="BorderBrush"
                                    Value="{DynamicResource sol_淺藍}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">

        <Setter Property="Foreground"
                Value="{DynamicResource sol_白}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>

                        <Border x:Name="b1"
                                Background="{DynamicResource sol_黑40}"
                                BorderBrush="{DynamicResource sol_白}"
                                BorderThickness="1"
                                Opacity="1" />
                        <Border x:Name="b2"
                                Background="{DynamicResource sol_淺藍40}"
                                BorderBrush="{DynamicResource sol_白}"
                                BorderThickness="1"
                                Opacity="0" />
                        <Border x:Name="b3"
                                Background="{DynamicResource sol_淺綠40}"
                                BorderBrush="{DynamicResource sol_白}"
                                BorderThickness="1"
                                Opacity="0" />

                        <!--內容-->
                        <ContentPresenter  HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           IsHitTestVisible="False"
                                           Margin="{TemplateBinding Padding}" />

                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--按下-->
                        <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="b1"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.0" />
                                    <DoubleAnimation Storyboard.TargetName="b2"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.0" />
                                    <DoubleAnimation Storyboard.TargetName="b3"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0:0:0.0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!--放開-->
                        <EventTrigger RoutedEvent="UIElement.PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="b1"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="b2"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="b3"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!--滑鼠移入-->
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="b1"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.0" />
                                    <DoubleAnimation Storyboard.TargetName="b2"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0:0:0.0" />
                                    <DoubleAnimation Storyboard.TargetName="b3"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!--滑鼠移出-->
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="b1"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="b2"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="b3"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
           TargetType="{x:Type ColorPicker:ColorComboBox}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ColorPicker:ColorComboBox}">
                    <Grid>
                     
                        <Border x:Name="OverallBorder"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                                Grid.Row="1" />
                        <Grid Background="Transparent"
                              Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="15" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0"
                                  Margin="4"
                                  Height="17"
                                  Width="17">
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <DrawingBrush TileMode="Tile"
                                                      Viewport="0,0,11,11"
                                                      ViewportUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="White"
                                                                     Geometry="M0,0L2,0 2,2 0,2z" />
                                                    <GeometryDrawing Brush="LightGray"
                                                                     Geometry="M0,1L2,1 2,2 1,2 1,0 0,0z" />
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Stroke="Black"
                                           StrokeThickness="1">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <TextBlock Grid.Column="1"
                                       Margin="5,0"
                                       VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <Binding Path="SelectedColor"
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <ColorPicker:ColorToStringConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Text>
                            </TextBlock>
                            <Grid Grid.Column="2">
                                <Border x:Name="ToggleButtonFill"
                                        Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                        Visibility="Hidden" />
                                <Border x:Name="ToggleButtonGlass"
                                        Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1"
                                                             StartPoint="0,0">
                                            <GradientStop Color="#96FFFFFF"
                                                          Offset="0" />
                                            <GradientStop Color="#28FFFFFF"
                                                          Offset="0.5" />
                                            <GradientStop Color="Transparent"
                                                          Offset="0.5" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="ToggleButtonBorder"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                        BorderThickness="1"
                                        Visibility="Hidden" />
                                <ToggleButton x:Name="PART_ToggleButton"
                                              Focusable="False"
                                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid Background="Transparent">
                                                            <Path Data="M0,0L3.5,4 7,0z"
                                                                  Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   Focusable="True"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   Placement="Bottom"
                                   StaysOpen="False">
                                <Border BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        BorderThickness="1"
                                        Background="#FFF6F6F6"
                                        Padding="5">
                                    <ColorPicker:ColorPicker x:Name="PART_ColorPicker" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="ToggleButtonFill"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="ToggleButtonGlass"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="ToggleButtonBorder"
                                    Value="Visible" />
                            <Setter Property="BorderBrush"
                                    TargetName="OverallBorder"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="ToggleButtonFill"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="ToggleButtonGlass"
                                    Value="Hidden" />
                            <Setter Property="Visibility"
                                    TargetName="ToggleButtonBorder"
                                    Value="Visible" />
                            <Setter Property="BorderBrush"
                                    TargetName="OverallBorder"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

                        